{
  "name": "tailwind-product-cards",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.0.0",
    "react-dom": "^18.0.0"
  },
  "devDependencies": {
    "autoprefixer": "^10.4.2",
    "postcss": "^8.4.6",
    "tailwindcss": "^3.0.23",
    "vite": "^5.0.0"
  }
}

export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};

import { useState } from "react";
import ProductCard from "./components/ProductCard.jsx";

const PRODUCTS = [
  {
    id: 1,
    title: "Noise-Cancelling Headphones",
    subtitle: "40h battery • BT 5.3 • Fast charge",
    price: 4999,
    rating: 4.5,
    tags: ["Bestseller"],
    image: "https://images.unsplash.com/photo-1518445074450-2b7d8b5f5f74?q=80&w=1200&auto=format&fit=crop",
  },
  {
    id: 2,
    title: "Mechanical Keyboard",
    subtitle: "Hot-swappable • RGB • 75%",
    price: 3499,
    rating: 4.2,
    tags: ["Hot"],
    image: "https://images.unsplash.com/photo-1517336714731-489689fd1ca8?q=80&w=1200&auto=format&fit=crop",
  },
  {
    id: 3,
    title: "4K USB-C Monitor",
    subtitle: "27” IPS • 99% sRGB • 60W PD",
    price: 21999,
    rating: 4.7,
    tags: ["New"],
    image: "https://images.unsplash.com/photo-1518791841217-8f162f1e1131?q=80&w=1200&auto=format&fit=crop",
  },
  {
    id: 4,
    title: "Portable SSD 1TB",
    subtitle: "USB 3.2 Gen 2 • 1,050MB/s",
    price: 6999,
    rating: 4.4,
    tags: ["Deal"],
    image: "https://images.unsplash.com/photo-1587825140400-5f0ae1f7f4fd?q=80&w=1200&auto=format&fit=crop",
  },
];

export default function App() {
  const [cart, setCart] = useState([]);
  const addToCart = (p) => setCart((c) => [...c, p]);

  return (
    <main className="min-h-screen bg-[radial-gradient(ellipse_at_top,_var(--tw-gradient-stops))] from-white to-gray-100">
      <div className="mx-auto max-w-6xl px-4 py-10">
        <header className="mb-8 flex items-center justify-between">
          <h1 className="text-2xl font-bold">Product Gallery</h1>
          <div className="rounded-full border border-black/10 bg-white px-4 py-2 text-sm">
            Cart: <span className="font-semibold">{cart.length}</span>
          </div>
        </header>

        <section className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
          {PRODUCTS.map((p) => (
            <ProductCard key={p.id} product={p} onAdd={addToCart} />
          ))}
        </section>
      </div>
    </main>
  );
}

import Button from "./ui/Button.jsx";
import { Card, CardContent } from "./ui/Card.jsx";
import Badge from "./ui/Badge.jsx";

function Stars({ value = 0, outOf = 5 }) {
  const full = Math.floor(value);
  const half = value - full >= 0.5;
  return (
    <div className="flex items-center gap-0.5" aria-label={`Rated ${value} out of ${outOf}`}>
      {Array.from({ length: outOf }).map((_, i) => {
        const isFull = i < full;
        const isHalf = !isFull && half && i === full;
        return (
          <svg key={i} viewBox="0 0 24 24" className="h-4 w-4"
               fill={isFull ? "currentColor" : "none"} stroke="currentColor" strokeWidth="1.5">
            {isHalf ? (
              <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.62L12 2 9.19 8.62 2 9.24l5.46 4.73L5.82 21z"
                    fill="currentColor" />
            ) : (
              <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.62L12 2 9.19 8.62 2 9.24l5.46 4.73L5.82 21z" />
            )}
          </svg>
        );
      })}
    </div>
  );
}

export default function ProductCard({ product, onAdd }) {
  return (
    <Card className="group overflow-hidden transition hover:-translate-y-1 hover:shadow-xl">
      <div className="relative">
        <img
          src={product.image}
          alt={product.title}
          className="aspect-[4/3] w-full object-cover"
          loading="lazy"
        />
        <div className="absolute left-3 top-3 flex gap-2">
          {product.tags?.map((t) => (
            <Badge key={t}>{t}</Badge>
          ))}
        </div>
      </div>
      <CardContent className="space-y-3">
        <h3 className="line-clamp-1 text-base font-semibold">{product.title}</h3>
        <div className="flex items-center justify-between">
          <span className="text-lg font-bold">₹{product.price.toLocaleString()}</span>
          <Stars value={product.rating} />
        </div>
        <p className="line-clamp-2 text-sm text-black/70">{product.subtitle}</p>
        <Button className="w-full" onClick={() => onAdd?.(product)}>Add to cart</Button>
      </CardContent>
    </Card>
  );
}

export default function Badge({ children, className = "" }) {
  return (
    <span className={`inline-flex items-center gap-1 rounded-full border border-black/10 bg-black/5 px-2 py-0.5 text-[11px] font-medium tracking-wide ${className}`}>
      {children}
    </span>
  );
}

export default function Button({ children, className = "", variant = "primary", ...props }) {
  const base = "inline-flex items-center justify-center rounded-xl px-4 py-2 text-sm font-medium transition active:scale-[.98] disabled:opacity-50 disabled:cursor-not-allowed";
  const variants = {
    primary: "bg-black text-white hover:bg-black/90",
    outline: "border border-black/15 hover:bg-black/5",
    ghost: "hover:bg-black/5",
  };
  return (
    <button className={`${base} ${variants[variant]} ${className}`} {...props}>
      {children}
    </button>
  );
}

export function Card({ className = "", children }) {
  return <div className={`rounded-2xl border border-black/10 bg-white shadow-soft ${className}`}>{children}</div>;
}
export function CardContent({ className = "", children }) {
  return <div className={`p-4 ${className}`}>{children}</div>;
}

@tailwind base;
@tailwind components;
@tailwind utilitie

import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";
import "./index.css";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

export default {
  content: ["./index.html", "./src/**/*.{js,jsx,ts,tsx}"],
  theme: {
    extend: {
      boxShadow: {
        soft: "0 10px 30px -12px rgba(0,0,0,0.25)",
      },
    },
  },
  plugins: [],
};
