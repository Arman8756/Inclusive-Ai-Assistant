// server.js
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const path = require("path");

const app = express();
app.use(cors());
app.use(express.json());

// MongoDB connection
mongoose.connect("mongodb://127.0.0.1:27017/notesapp", {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
.then(() => console.log("âœ… MongoDB Connected"))
.catch(err => console.error(err));

// Note model
const Note = mongoose.model("Note", new mongoose.Schema({
  title: String,
  content: String
}, { timestamps: true }));

// REST API
app.post("/api/notes", async (req, res) => {
  const note = new Note(req.body);
  await note.save();
  res.json(note);
});

app.get("/api/notes", async (req, res) => {
  const notes = await Note.find();
  res.json(notes);
});

app.put("/api/notes/:id", async (req, res) => {
  const note = await Note.findByIdAndUpdate(req.params.id, req.body, { new: true });
  res.json(note);
});

app.delete("/api/notes/:id", async (req, res) => {
  await Note.findByIdAndDelete(req.params.id);
  res.json({ message: "Note deleted" });
});

// Serve frontend
app.get("/", (req, res) => {
  res.send(`
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Notes App</title>
  <style>
    body { font-family: Arial; max-width: 600px; margin: auto; }
    .note { border: 1px solid #ccc; padding: 10px; margin: 5px 0; }
  </style>
</head>
<body>
  <h1>Notes App (Full-stack CRUD)</h1>

  <input id="title" placeholder="Title" />
  <input id="content" placeholder="Content" />
  <button onclick="addNote()">Add Note</button>

  <h2>All Notes</h2>
  <div id="notes"></div>

  <script>
    const API_URL = "/api/notes";

    async function fetchNotes() {
      const res = await fetch(API_URL);
      const notes = await res.json();
      document.getElementById("notes").innerHTML = notes.map(note => \`
        <div class="note">
          <b>\${note.title}</b>: \${note.content}
          <button onclick="deleteNote('\${note._id}')">Delete</button>
        </div>
      \`).join("");
    }

    async function addNote() {
      const title = document.getElementById("title").value;
      const content = document.getElementById("content").value;
      await fetch(API_URL, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ title, content })
      });
      fetchNotes();
    }

    async function deleteNote(id) {
      await fetch(\`\${API_URL}/\${id}\`, { method: "DELETE" });
      fetchNotes();
    }

    fetchNotes();
  </script>
</body>
</html>
  `);
});

const PORT = 5000;
app.listen(PORT, () => console.log(`ðŸš€ Server running on http://localhost:${PORT}`));
